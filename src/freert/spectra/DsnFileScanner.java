/* The following code was generated by JFlex 1.6.1 */

package freert.spectra;
@SuppressWarnings("all")

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>SpecctraFileDescription.flex</tt>
 */
public class DsnFileScanner implements JflexScanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int STRING1 = 2;
  public static final int STRING2 = 4;
  public static final int NAME = 6;
  public static final int LAYER_NAME = 8;
  public static final int COMPONENT_NAME = 10;
  public static final int SPEC_CHAR = 12;
  public static final int IGNORE_QUOTE = 14;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7, 7
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\0\1\3\1\1\21\0\1\16\1\3\1\16"+
    "\1\11\1\6\1\16\1\16\1\16\1\12\1\56\1\57\1\5\1\20"+
    "\1\16\1\17\1\14\1\4\1\21\11\10\1\16\1\16\1\16\1\16"+
    "\1\16\1\16\1\16\1\23\1\24\1\33\1\44\1\22\1\43\1\37"+
    "\1\45\1\35\1\7\1\47\1\30\1\51\1\40\1\27\1\41\1\55"+
    "\1\42\1\26\1\32\1\31\1\36\1\54\1\52\1\50\1\53\1\16"+
    "\1\15\1\16\1\16\1\13\1\0\1\23\1\24\1\33\1\44\1\22"+
    "\1\43\1\37\1\45\1\35\1\7\1\47\1\30\1\51\1\40\1\27"+
    "\1\41\1\55\1\42\1\26\1\32\1\31\1\36\1\54\1\52\1\50"+
    "\1\53\3\0\1\16\261\0\2\34\115\0\1\25\u0229\0\1\16\37\0"+
    "\1\16\u1d5c\0\1\16\3\0\1\46\uded2\0\1\16\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\22\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\7\0\1\1\1\2\2\3\3\4\1\5\1\6\1\7"+
    "\1\2\1\5\2\4\1\2\6\4\1\2\10\4\1\2"+
    "\2\4\1\10\1\11\1\12\1\13\1\14\1\12\1\1"+
    "\1\15\1\16\1\2\3\1\2\4\3\0\1\17\7\4"+
    "\6\0\7\4\1\20\5\4\1\0\1\4\1\0\4\4"+
    "\1\0\1\4\1\0\2\4\1\0\4\4\1\0\6\4"+
    "\1\0\10\4\1\0\3\4\1\0\1\4\1\0\2\4"+
    "\1\0\2\1\1\0\1\4\2\17\1\0\1\17\1\0"+
    "\7\4\11\0\13\4\1\21\4\4\1\0\1\4\1\0"+
    "\6\4\1\0\1\4\1\0\2\4\2\22\1\4\1\23"+
    "\2\4\1\0\4\4\1\0\5\4\1\24\2\25\2\4"+
    "\1\0\7\4\1\0\1\4\2\26\1\4\1\0\2\4"+
    "\1\0\1\4\3\0\3\4\1\0\1\4\1\0\1\1"+
    "\1\27\1\0\1\4\1\0\3\4\1\0\1\4\1\0"+
    "\1\4\2\30\1\4\5\0\1\31\4\0\5\4\1\31"+
    "\10\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\32\1\0\2\4\1\33\1\4\1\0\1\4"+
    "\2\34\1\0\2\4\1\0\1\35\1\4\1\35\2\4"+
    "\1\36\1\4\1\0\1\4\1\37\1\0\2\4\1\0"+
    "\1\4\2\0\2\4\1\40\4\4\2\41\2\4\1\0"+
    "\1\4\1\42\2\4\1\43\2\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\44\2\0"+
    "\1\4\1\44\2\4\1\0\1\4\1\0\1\1\1\0"+
    "\3\4\1\0\1\4\1\0\2\4\6\0\1\45\1\46"+
    "\1\0\6\4\1\45\1\46\1\4\1\0\1\4\1\47"+
    "\1\4\1\50\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\3\4\1\0\3\4\1\51\2\52\2\0\2\4"+
    "\2\53\1\0\1\4\4\0\7\4\1\0\1\4\1\0"+
    "\2\4\1\0\1\4\2\0\4\4\1\54\1\55\1\56"+
    "\3\4\1\0\4\4\2\57\2\4\1\0\1\4\1\60"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\61\3\4\1\61\1\0\1\4\1\0\1\1\1\0"+
    "\2\4\1\62\2\63\1\0\2\4\4\0\1\64\2\0"+
    "\4\4\1\64\2\4\1\0\1\4\1\65\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\3\4\1\0"+
    "\4\4\2\0\2\4\1\34\1\0\1\34\1\4\1\0"+
    "\1\4\4\0\6\4\1\66\1\0\1\4\2\67\1\4"+
    "\1\0\1\4\2\0\2\4\1\0\10\4\1\0\2\4"+
    "\2\70\1\71\1\72\1\4\1\0\1\4\1\73\2\0"+
    "\2\4\1\0\1\4\1\0\1\4\1\74\1\0\1\75"+
    "\1\74\1\4\1\75\1\0\1\4\2\76\1\0\2\4"+
    "\1\0\2\4\1\77\6\0\1\77\6\4\2\100\1\4"+
    "\1\0\1\4\1\0\1\4\2\101\1\0\1\102\1\103"+
    "\1\4\1\102\1\103\1\0\1\4\1\104\2\4\1\0"+
    "\1\105\1\4\1\105\2\106\1\0\1\4\4\0\5\4"+
    "\2\107\1\0\1\4\1\0\1\4\1\0\1\4\2\0"+
    "\2\4\1\0\1\4\1\40\1\4\1\0\3\4\1\0"+
    "\3\4\1\110\1\0\3\4\1\0\1\4\1\0\1\4"+
    "\2\0\2\4\1\0\1\4\2\111\1\0\1\4\1\0"+
    "\1\4\2\112\1\4\1\0\1\4\1\113\6\0\7\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\2\114\2\4"+
    "\1\0\1\4\2\115\2\0\1\116\1\0\2\4\1\116"+
    "\2\4\1\0\1\4\1\0\1\4\1\0\1\4\2\117"+
    "\1\0\1\120\1\4\1\120\1\0\2\4\1\0\2\4"+
    "\1\0\1\4\1\0\2\4\1\0\3\4\1\0\1\4"+
    "\1\0\1\4\1\121\1\0\1\121\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\122\1\0\1\4\2\0"+
    "\1\123\3\0\2\4\1\123\4\4\2\124\1\0\1\4"+
    "\2\125\1\33\1\51\1\0\1\4\1\0\1\126\1\0"+
    "\1\4\1\126\2\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\2\127\1\0\2\4\1\0\1\4\1\130\1\0"+
    "\1\4\1\0\2\4\1\0\1\4\1\42\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\2\4\1\0\1\4\3\0\1\131"+
    "\1\0\3\4\1\131\1\4\1\132\1\0\2\4\1\0"+
    "\1\4\1\133\1\0\1\133\2\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\2\4\1\0\1\4\1\0"+
    "\1\4\2\134\1\4\2\135\1\0\1\4\1\0\1\4"+
    "\2\136\1\0\1\4\2\137\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\1\140\3\4\1\140"+
    "\1\0\2\4\2\141\2\142\1\4\2\143\1\0\1\4"+
    "\1\0\1\4\1\0\2\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\2\0\1\144\2\4\1\144\2\145\2\4\1\0\1\4"+
    "\2\146\1\0\2\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\2\147\1\0\1\4\2\150\2\151\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\152\1\0\1\152\1\4"+
    "\1\0\3\4\2\153\2\154\1\155\2\156\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\2\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\2\0\2\4\1\0\1\4\1\0\1\4"+
    "\2\157\1\4\2\160\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\2\4\1\0\1\4\2\161\2\162\1\0\1\4\1\0"+
    "\1\4\2\163\1\0\2\4\1\0\1\4\2\164\1\0"+
    "\1\4\1\0\2\4\2\165\1\0\1\4\1\0\2\4"+
    "\1\0\1\4\1\0\1\4\2\166\1\4\1\0\1\4"+
    "\1\0\2\4\1\0\1\4\1\0\1\4\1\167\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\2\170"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\2\171";

  private static int [] zzUnpackAction() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\60\0\140\0\220\0\300\0\360\0\u0120\0\u0150"+
    "\0\u0180\0\u01b0\0\u0180\0\u01e0\0\u0210\0\u0240\0\u0270\0\u0180"+
    "\0\u0180\0\u02a0\0\u02d0\0\u0300\0\u0330\0\u0360\0\u0390\0\u03c0"+
    "\0\u03f0\0\u0420\0\u0450\0\u0480\0\u04b0\0\u04e0\0\u0510\0\u0540"+
    "\0\u0570\0\u05a0\0\u05d0\0\u0600\0\u0630\0\u0660\0\u0690\0\u06c0"+
    "\0\u0180\0\u0180\0\u06f0\0\u0180\0\u0180\0\u0720\0\u0750\0\u0180"+
    "\0\u0180\0\u0780\0\u07b0\0\u07e0\0\u0810\0\u0180\0\u0840\0\u0870"+
    "\0\u08a0\0\u08d0\0\u02d0\0\u0900\0\u0930\0\u0960\0\u0990\0\u09c0"+
    "\0\u09f0\0\u0a20\0\u0a50\0\u0a80\0\u0ab0\0\u0ae0\0\u0b10\0\u0b40"+
    "\0\u0b70\0\u0ba0\0\u0bd0\0\u0c00\0\u0c30\0\u0c60\0\u0c90\0\u0210"+
    "\0\u0cc0\0\u0cf0\0\u0d20\0\u0d50\0\u0d80\0\u0db0\0\u0de0\0\u0e10"+
    "\0\u0e40\0\u0e70\0\u0ea0\0\u0ed0\0\u0f00\0\u0f30\0\u0f60\0\u0f90"+
    "\0\u0fc0\0\u0ff0\0\u1020\0\u1050\0\u1080\0\u10b0\0\u10e0\0\u1110"+
    "\0\u1140\0\u1170\0\u11a0\0\u11d0\0\u1200\0\u1230\0\u1260\0\u1290"+
    "\0\u12c0\0\u12f0\0\u1320\0\u1350\0\u1380\0\u13b0\0\u13e0\0\u1410"+
    "\0\u1440\0\u1470\0\u14a0\0\u14d0\0\u1500\0\u1530\0\u1560\0\u1590"+
    "\0\u15c0\0\u15f0\0\u1620\0\u1650\0\u1680\0\u16b0\0\u16e0\0\u0180"+
    "\0\u1710\0\u1740\0\u1770\0\u17a0\0\u17d0\0\u1800\0\u1830\0\u1860"+
    "\0\u1890\0\u18c0\0\u18f0\0\u1920\0\u1950\0\u1980\0\u19b0\0\u19e0"+
    "\0\u1a10\0\u1a40\0\u1a70\0\u1aa0\0\u1ad0\0\u1b00\0\u1b30\0\u1b60"+
    "\0\u1b90\0\u1bc0\0\u1bf0\0\u1c20\0\u0210\0\u1c50\0\u1c80\0\u1cb0"+
    "\0\u1ce0\0\u1d10\0\u1d40\0\u1d70\0\u1da0\0\u1dd0\0\u1e00\0\u1e30"+
    "\0\u1e60\0\u1e90\0\u1ec0\0\u1ef0\0\u1f20\0\u1f50\0\u1f80\0\u1fb0"+
    "\0\u1fe0\0\u2010\0\u2040\0\u2070\0\u20a0\0\u20d0\0\u2100\0\u2130"+
    "\0\u2160\0\u2190\0\u21c0\0\u21f0\0\u2220\0\u2250\0\u2280\0\u22b0"+
    "\0\u0210\0\u22e0\0\u2310\0\u2340\0\u2370\0\u23a0\0\u23d0\0\u2400"+
    "\0\u2430\0\u2460\0\u2490\0\u24c0\0\u24f0\0\u2520\0\u2550\0\u0180"+
    "\0\u0210\0\u2580\0\u25b0\0\u25e0\0\u2610\0\u2640\0\u2670\0\u26a0"+
    "\0\u26d0\0\u2700\0\u2730\0\u2760\0\u2790\0\u27c0\0\u27f0\0\u2820"+
    "\0\u2850\0\u0750\0\u2880\0\u28b0\0\u28e0\0\u2910\0\u2940\0\u2970"+
    "\0\u29a0\0\u29d0\0\u2a00\0\u2a30\0\u0180\0\u0210\0\u2a60\0\u2a90"+
    "\0\u2ac0\0\u2af0\0\u2b20\0\u2b50\0\u0180\0\u2b80\0\u2bb0\0\u2be0"+
    "\0\u2c10\0\u2c40\0\u2c70\0\u2ca0\0\u2cd0\0\u2d00\0\u0210\0\u2d30"+
    "\0\u2d60\0\u2d90\0\u2dc0\0\u2df0\0\u2e20\0\u2e50\0\u2e80\0\u2eb0"+
    "\0\u2ee0\0\u2f10\0\u2f40\0\u2f70\0\u2fa0\0\u2fd0\0\u3000\0\u0210"+
    "\0\u3030\0\u3060\0\u3090\0\u30c0\0\u30f0\0\u3120\0\u3150\0\u3180"+
    "\0\u31b0\0\u31e0\0\u3210\0\u3240\0\u3270\0\u0180\0\u32a0\0\u0210"+
    "\0\u32d0\0\u3300\0\u0210\0\u3330\0\u3360\0\u3390\0\u0210\0\u33c0"+
    "\0\u33f0\0\u3420\0\u3450\0\u3480\0\u34b0\0\u34e0\0\u3510\0\u3540"+
    "\0\u3570\0\u35a0\0\u35d0\0\u3600\0\u3630\0\u0180\0\u0210\0\u3660"+
    "\0\u3690\0\u36c0\0\u36f0\0\u3720\0\u3750\0\u3780\0\u37b0\0\u37e0"+
    "\0\u3810\0\u3840\0\u3870\0\u38a0\0\u38d0\0\u3900\0\u3930\0\u3960"+
    "\0\u3990\0\u39c0\0\u39f0\0\u3a20\0\u3a50\0\u3a80\0\u3ab0\0\u3ae0"+
    "\0\u3b10\0\u3b40\0\u3b70\0\u3ba0\0\u3bd0\0\u3c00\0\u3c30\0\u3c60"+
    "\0\u3c90\0\u3cc0\0\u3cf0\0\u3d20\0\u3d50\0\u3d80\0\u3db0\0\u3de0"+
    "\0\u3e10\0\u3e40\0\u3e70\0\u3ea0\0\u3ed0\0\u3f00\0\u0180\0\u0180"+
    "\0\u3f30\0\u3f60\0\u3f90\0\u3fc0\0\u3ff0\0\u4020\0\u4050\0\u0210"+
    "\0\u0210\0\u4080\0\u40b0\0\u40e0\0\u0210\0\u4110\0\u4140\0\u4170"+
    "\0\u41a0\0\u41d0\0\u4200\0\u4230\0\u4260\0\u4290\0\u42c0\0\u42f0"+
    "\0\u4320\0\u4350\0\u4380\0\u43b0\0\u43e0\0\u4410\0\u4440\0\u4470"+
    "\0\u44a0\0\u44d0\0\u4500\0\u4530\0\u4560\0\u4590\0\u0180\0\u0210"+
    "\0\u45c0\0\u45f0\0\u4620\0\u4650\0\u4680\0\u46b0\0\u46e0\0\u4710"+
    "\0\u4740\0\u4770\0\u47a0\0\u47d0\0\u4800\0\u4830\0\u4860\0\u4890"+
    "\0\u48c0\0\u48f0\0\u4920\0\u4950\0\u4980\0\u49b0\0\u49e0\0\u4a10"+
    "\0\u4a40\0\u4a70\0\u0210\0\u4aa0\0\u4ad0\0\u4b00\0\u4b30\0\u4b60"+
    "\0\u4b90\0\u4bc0\0\u4bf0\0\u4c20\0\u4c50\0\u0180\0\u0210\0\u4c80"+
    "\0\u4cb0\0\u4ce0\0\u4d10\0\u0210\0\u4d40\0\u4d70\0\u4da0\0\u4dd0"+
    "\0\u4e00\0\u4e30\0\u4e60\0\u4e90\0\u4ec0\0\u4ef0\0\u0180\0\u4f20"+
    "\0\u4f50\0\u4f80\0\u0210\0\u4fb0\0\u4fe0\0\u5010\0\u5040\0\u5070"+
    "\0\u50a0\0\u50d0\0\u0210\0\u0180\0\u0210\0\u5100\0\u5130\0\u5160"+
    "\0\u5190\0\u51c0\0\u51f0\0\u5220\0\u0180\0\u5250\0\u5280\0\u52b0"+
    "\0\u52e0\0\u5310\0\u5340\0\u0210\0\u5370\0\u53a0\0\u53d0\0\u5400"+
    "\0\u0210\0\u5430\0\u5460\0\u5490\0\u54c0\0\u54f0\0\u5520\0\u5550"+
    "\0\u5580\0\u55b0\0\u55e0\0\u5610\0\u5640\0\u5670\0\u56a0\0\u56d0"+
    "\0\u5700\0\u5730\0\u5760\0\u5790\0\u57c0\0\u57f0\0\u5820\0\u0180"+
    "\0\u5850\0\u0210\0\u5880\0\u58b0\0\u58e0\0\u5910\0\u5940\0\u5970"+
    "\0\u59a0\0\u59d0\0\u5a00\0\u5a30\0\u5a60\0\u5a90\0\u5ac0\0\u0210"+
    "\0\u5af0\0\u5b20\0\u0180\0\u0210\0\u5b50\0\u5b80\0\u5bb0\0\u5be0"+
    "\0\u5c10\0\u5c40\0\u5c70\0\u5ca0\0\u5cd0\0\u5d00\0\u5d30\0\u5d60"+
    "\0\u5d90\0\u5dc0\0\u5df0\0\u5e20\0\u5e50\0\u5e80\0\u5eb0\0\u0180"+
    "\0\u0210\0\u5ee0\0\u0210\0\u5f10\0\u5f40\0\u5f70\0\u0210\0\u5fa0"+
    "\0\u5fd0\0\u6000\0\u6030\0\u6060\0\u6090\0\u60c0\0\u60f0\0\u0180"+
    "\0\u6120\0\u0180\0\u0210\0\u6150\0\u0210\0\u6180\0\u61b0\0\u0180"+
    "\0\u0750\0\u61e0\0\u6210\0\u6240\0\u6270\0\u62a0\0\u62d0\0\u0180"+
    "\0\u6300\0\u6330\0\u6360\0\u6390\0\u63c0\0\u63f0\0\u0210\0\u6420"+
    "\0\u6450\0\u6480\0\u64b0\0\u64e0\0\u6510\0\u0180\0\u0210\0\u6540"+
    "\0\u6570\0\u65a0\0\u65d0\0\u6600\0\u0180\0\u0210\0\u6630\0\u0180"+
    "\0\u0180\0\u6660\0\u0210\0\u0210\0\u6690\0\u66c0\0\u0210\0\u66f0"+
    "\0\u6720\0\u6750\0\u0180\0\u6780\0\u0210\0\u0180\0\u0210\0\u67b0"+
    "\0\u67e0\0\u6810\0\u6840\0\u6870\0\u68a0\0\u68d0\0\u6900\0\u6930"+
    "\0\u6960\0\u6990\0\u69c0\0\u69f0\0\u6a20\0\u6a50\0\u6a80\0\u6ab0"+
    "\0\u6ae0\0\u6b10\0\u6b40\0\u6b70\0\u6ba0\0\u6bd0\0\u6c00\0\u6c30"+
    "\0\u0210\0\u6c60\0\u6c90\0\u6cc0\0\u6cf0\0\u6d20\0\u6d50\0\u6d80"+
    "\0\u6db0\0\u6de0\0\u0210\0\u6e10\0\u6e40\0\u6e70\0\u6ea0\0\u6ed0"+
    "\0\u6f00\0\u6f30\0\u6f60\0\u6f90\0\u6fc0\0\u6ff0\0\u7020\0\u7050"+
    "\0\u7080\0\u0180\0\u0210\0\u70b0\0\u70e0\0\u7110\0\u7140\0\u0180"+
    "\0\u0210\0\u7170\0\u71a0\0\u71d0\0\u0210\0\u7200\0\u7230\0\u7260"+
    "\0\u7290\0\u72c0\0\u72f0\0\u7320\0\u7350\0\u7380\0\u73b0\0\u73e0"+
    "\0\u7410\0\u7440\0\u7470\0\u74a0\0\u74d0\0\u7500\0\u7530\0\u7560"+
    "\0\u0180\0\u0210\0\u7590\0\u75c0\0\u75f0\0\u7620\0\u0180\0\u0210"+
    "\0\u7650\0\u7680\0\u0180\0\u76b0\0\u76e0\0\u7710\0\u0210\0\u7740"+
    "\0\u7770\0\u77a0\0\u77d0\0\u7800\0\u7830\0\u7860\0\u7890\0\u0180"+
    "\0\u0210\0\u78c0\0\u0180\0\u78f0\0\u0210\0\u7920\0\u7950\0\u7980"+
    "\0\u79b0\0\u79e0\0\u7a10\0\u7a40\0\u7a70\0\u7aa0\0\u7ad0\0\u7b00"+
    "\0\u7b30\0\u7b60\0\u7b90\0\u7bc0\0\u7bf0\0\u7c20\0\u7c50\0\u7c80"+
    "\0\u0180\0\u7cb0\0\u0210\0\u7ce0\0\u7d10\0\u7d40\0\u7d70\0\u7da0"+
    "\0\u7dd0\0\u7e00\0\u7e30\0\u7e60\0\u7e90\0\u7ec0\0\u7ef0\0\u0180"+
    "\0\u7f20\0\u7f50\0\u7f80\0\u7fb0\0\u7fe0\0\u0210\0\u8010\0\u8040"+
    "\0\u8070\0\u80a0\0\u0180\0\u0210\0\u80d0\0\u8100\0\u0180\0\u0210"+
    "\0\u0210\0\u8130\0\u8160\0\u8190\0\u81c0\0\u0180\0\u81f0\0\u8220"+
    "\0\u0210\0\u8250\0\u8280\0\u82b0\0\u82e0\0\u8310\0\u8340\0\u8370"+
    "\0\u83a0\0\u0180\0\u0210\0\u83d0\0\u8400\0\u8430\0\u8460\0\u8490"+
    "\0\u0210\0\u84c0\0\u84f0\0\u8520\0\u8550\0\u8580\0\u85b0\0\u85e0"+
    "\0\u0210\0\u8610\0\u8640\0\u8670\0\u86a0\0\u86d0\0\u8700\0\u8730"+
    "\0\u8760\0\u8790\0\u87c0\0\u87f0\0\u8820\0\u8850\0\u8880\0\u88b0"+
    "\0\u88e0\0\u8910\0\u8940\0\u8970\0\u89a0\0\u0180\0\u89d0\0\u8a00"+
    "\0\u8a30\0\u8a60\0\u0210\0\u8a90\0\u0210\0\u8ac0\0\u8af0\0\u8b20"+
    "\0\u8b50\0\u8b80\0\u0180\0\u8bb0\0\u0210\0\u8be0\0\u8c10\0\u8c40"+
    "\0\u8c70\0\u8ca0\0\u8cd0\0\u8d00\0\u8d30\0\u8d60\0\u8d90\0\u8dc0"+
    "\0\u8df0\0\u8e20\0\u8e50\0\u8e80\0\u0180\0\u0210\0\u8eb0\0\u0180"+
    "\0\u0210\0\u8ee0\0\u8f10\0\u8f40\0\u8f70\0\u0180\0\u0210\0\u8fa0"+
    "\0\u8fd0\0\u0180\0\u0210\0\u9000\0\u9030\0\u9060\0\u9090\0\u90c0"+
    "\0\u90f0\0\u9120\0\u9150\0\u9180\0\u91b0\0\u91e0\0\u0180\0\u9210"+
    "\0\u9240\0\u9270\0\u0210\0\u92a0\0\u92d0\0\u9300\0\u0180\0\u0210"+
    "\0\u0180\0\u0210\0\u9330\0\u0180\0\u0210\0\u9360\0\u9390\0\u93c0"+
    "\0\u93f0\0\u9420\0\u9450\0\u9480\0\u94b0\0\u94e0\0\u9510\0\u9540"+
    "\0\u9570\0\u95a0\0\u95d0\0\u9600\0\u9630\0\u9660\0\u9690\0\u96c0"+
    "\0\u96f0\0\u9720\0\u9750\0\u9780\0\u97b0\0\u97e0\0\u9810\0\u9840"+
    "\0\u9870\0\u98a0\0\u0180\0\u98d0\0\u9900\0\u0210\0\u9930\0\u9960"+
    "\0\u9990\0\u99c0\0\u99f0\0\u9a20\0\u0180\0\u0210\0\u9a50\0\u9a80"+
    "\0\u9ab0\0\u9ae0\0\u9b10\0\u9b40\0\u9b70\0\u9ba0\0\u9bd0\0\u0180"+
    "\0\u0210\0\u9c00\0\u9c30\0\u0180\0\u0210\0\u0180\0\u0210\0\u9c60"+
    "\0\u9c90\0\u9cc0\0\u9cf0\0\u9d20\0\u9d50\0\u0180\0\u9d80\0\u0210"+
    "\0\u9db0\0\u9de0\0\u9e10\0\u9e40\0\u9e70\0\u0180\0\u0210\0\u0180"+
    "\0\u0210\0\u0210\0\u0180\0\u0210\0\u9ea0\0\u9ed0\0\u9f00\0\u9f30"+
    "\0\u9f60\0\u9f90\0\u9fc0\0\u9ff0\0\ua020\0\ua050\0\ua080\0\ua0b0"+
    "\0\ua0e0\0\ua110\0\ua140\0\ua170\0\ua1a0\0\ua1d0\0\ua200\0\ua230"+
    "\0\ua260\0\ua290\0\ua2c0\0\ua2f0\0\ua320\0\ua350\0\ua380\0\ua3b0"+
    "\0\ua3e0\0\ua410\0\ua440\0\ua470\0\ua4a0\0\ua4d0\0\ua500\0\ua530"+
    "\0\ua560\0\u0180\0\u0210\0\ua590\0\u0180\0\u0210\0\ua5c0\0\ua5f0"+
    "\0\ua620\0\ua650\0\ua680\0\ua6b0\0\ua6e0\0\ua710\0\ua740\0\ua770"+
    "\0\ua7a0\0\ua7d0\0\ua800\0\ua830\0\ua860\0\ua890\0\ua8c0\0\u0180"+
    "\0\u0210\0\u0180\0\u0210\0\ua8f0\0\ua920\0\ua950\0\ua980\0\u0180"+
    "\0\u0210\0\ua9b0\0\ua9e0\0\uaa10\0\uaa40\0\uaa70\0\u0180\0\u0210"+
    "\0\uaaa0\0\uaad0\0\uab00\0\uab30\0\uab60\0\uab90\0\uabc0\0\uabf0"+
    "\0\uac20\0\uac50\0\uac80\0\uacb0\0\uace0\0\uad10\0\uad40\0\uad70"+
    "\0\u0180\0\u0210\0\uada0\0\uadd0\0\uae00\0\uae30\0\uae60\0\uae90"+
    "\0\uaec0\0\uaef0\0\uaf20\0\uaf50\0\u0210\0\uaf80\0\uafb0\0\uafe0"+
    "\0\ub010\0\ub040\0\ub070\0\ub0a0\0\ub0d0\0\ub100\0\ub130\0\ub160"+
    "\0\ub190\0\ub1c0\0\ub1f0\0\ub220\0\ub250\0\ub280\0\ub2b0\0\ub2e0"+
    "\0\ub310\0\ub340\0\ub370\0\ub3a0\0\ub3d0\0\ub400\0\ub430\0\ub460"+
    "\0\ub490\0\ub4c0\0\ub4f0\0\ub520\0\ub550\0\u0180\0\u0210\0\ub580"+
    "\0\ub5b0\0\ub5e0\0\ub610\0\ub640\0\ub670\0\ub6a0\0\ub6d0\0\ub700"+
    "\0\ub730\0\ub760\0\ub790\0\ub7c0\0\ub7f0\0\u0180\0\u0210";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\11\1\12\2\13\1\14\1\15\1\16\1\15\1\17"+
    "\1\20\1\21\4\15\2\22\1\23\1\15\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\15"+
    "\1\45\1\46\1\47\4\15\1\50\1\15\1\51\1\52"+
    "\11\53\1\54\3\53\1\55\42\53\12\56\1\54\2\56"+
    "\1\55\42\56\1\11\1\12\2\13\5\57\1\20\1\21"+
    "\12\57\1\11\6\57\1\11\11\57\1\11\7\57\1\60"+
    "\1\61\1\11\1\12\2\13\5\57\1\20\1\21\12\57"+
    "\1\62\1\63\5\57\1\11\4\57\1\64\4\57\1\11"+
    "\7\57\1\60\1\61\1\11\1\12\2\13\5\65\1\20"+
    "\1\21\4\65\1\11\5\65\1\11\6\65\1\11\11\65"+
    "\1\11\7\65\1\60\1\61\4\11\3\66\4\11\6\66"+
    "\40\11\1\12\2\13\21\57\1\11\6\57\1\11\11\57"+
    "\1\11\7\57\1\60\1\61\62\0\1\13\61\0\1\15"+
    "\1\67\17\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\2\0\1\70\1\12\1\13\1\70\21\16\1\70\6\16"+
    "\1\70\11\16\1\70\7\16\2\70\10\0\1\17\3\0"+
    "\1\71\4\0\1\17\1\72\45\0\1\17\10\0\1\23"+
    "\46\0\1\73\3\0\1\71\4\0\1\73\1\72\41\0"+
    "\20\15\1\74\1\0\3\15\1\75\1\76\1\77\1\0"+
    "\2\15\1\100\6\15\1\0\7\15\6\0\17\15\1\101"+
    "\1\15\1\0\1\15\1\102\4\15\1\0\11\15\1\0"+
    "\7\15\24\0\1\103\7\0\1\104\1\0\2\105\2\0"+
    "\1\106\1\107\3\0\1\110\16\0\16\15\1\111\2\15"+
    "\1\0\4\15\1\112\1\15\1\105\1\113\2\15\1\114"+
    "\1\115\3\15\1\116\1\0\7\15\6\0\21\15\1\0"+
    "\3\15\1\117\2\15\1\0\3\15\1\120\1\15\1\121"+
    "\1\122\2\15\1\0\7\15\6\0\16\15\1\123\1\124"+
    "\1\15\1\0\1\15\1\125\4\15\1\126\1\127\10\15"+
    "\1\0\7\15\6\0\21\15\1\130\1\131\5\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\11\15\1\0\1\15\1\132\5\15\6\0\21\15\1\0"+
    "\1\15\1\133\1\134\3\15\1\135\1\136\10\15\1\0"+
    "\7\15\53\0\1\137\12\0\21\15\1\0\6\15\1\0"+
    "\11\15\1\0\2\15\1\140\4\15\6\0\16\15\1\141"+
    "\2\15\1\0\6\15\1\142\1\143\10\15\1\0\7\15"+
    "\6\0\16\15\1\144\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\16\15\1\145\2\15\1\0\1\15"+
    "\1\146\4\15\1\147\1\150\10\15\1\0\7\15\6\0"+
    "\17\15\1\151\1\15\1\0\1\15\1\152\1\153\1\154"+
    "\1\15\1\155\1\156\1\157\4\15\1\160\3\15\1\0"+
    "\7\15\6\0\16\15\1\161\2\15\1\0\1\15\1\162"+
    "\1\15\1\163\2\15\1\0\11\15\1\0\7\15\6\0"+
    "\17\15\1\164\1\15\1\0\1\15\1\165\1\166\3\15"+
    "\1\167\1\170\4\15\1\171\3\15\1\0\7\15\6\0"+
    "\21\15\1\0\1\15\1\172\4\15\1\0\11\15\1\0"+
    "\7\15\24\0\1\173\41\0\16\15\1\174\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\175\1\176\4\15\1\177\3\15\1\0\7\15"+
    "\2\0\11\53\1\0\3\53\1\0\42\53\12\56\1\0"+
    "\2\56\1\0\42\56\4\0\21\57\1\0\6\57\1\0"+
    "\11\57\1\0\7\57\36\0\2\200\26\0\21\57\1\0"+
    "\6\57\1\200\1\201\10\57\1\0\7\57\6\0\21\57"+
    "\1\0\5\57\1\202\1\0\11\57\1\0\7\57\6\0"+
    "\13\65\1\0\5\65\1\0\6\65\1\0\11\65\1\0"+
    "\7\65\2\0\4\203\1\204\1\15\17\204\1\203\6\204"+
    "\1\203\11\204\1\203\7\204\2\203\1\70\1\12\1\13"+
    "\55\70\10\0\1\205\10\0\1\205\46\0\1\206\6\0"+
    "\2\207\1\210\42\0\21\15\1\211\1\212\5\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\4\15\1\213"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\4\15\1\214\1\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\4\15\1\215\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\17\15\1\216\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\5\15\1\217"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\3\15"+
    "\1\220\2\15\1\0\11\15\1\0\7\15\27\0\2\221"+
    "\54\0\1\222\16\0\1\223\54\0\1\224\4\0\1\225"+
    "\36\0\1\226\57\0\1\227\57\0\1\230\3\0\1\231"+
    "\34\0\21\15\1\221\1\232\5\15\1\0\11\15\1\0"+
    "\7\15\6\0\17\15\1\233\1\15\1\0\6\15\1\0"+
    "\5\15\1\234\3\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\2\15\1\235\4\15\1\236\1\15\1\0"+
    "\7\15\6\0\17\15\1\237\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\17\15\1\240\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\17\15\1\241"+
    "\1\15\1\0\1\15\1\242\4\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\4\15\1\243\1\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\7\15\1\244\1\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\6\15\1\245\2\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\246\5\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\11\15\1\0"+
    "\1\15\1\247\5\15\6\0\21\15\1\0\5\15\1\250"+
    "\1\0\2\15\1\251\6\15\1\0\7\15\26\0\1\252"+
    "\37\0\20\15\1\253\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\24\0\1\254\41\0\16\15\1\255\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\256\4\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\257\5\15\1\0"+
    "\2\15\1\260\4\15\6\0\16\15\1\261\1\262\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\44\0\1\263"+
    "\21\0\21\15\1\0\6\15\1\0\5\15\1\264\3\15"+
    "\1\0\7\15\25\0\1\265\40\0\17\15\1\266\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\267\3\15\1\0\7\15"+
    "\25\0\1\270\40\0\17\15\1\271\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\272\5\15\1\0\7\15\6\0\21\15"+
    "\1\0\4\15\1\273\1\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\3\15\1\274\1\15"+
    "\1\275\3\15\1\0\7\15\42\0\1\276\23\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\277\5\15\1\0\7\15"+
    "\6\0\21\15\1\0\4\15\1\300\1\15\1\0\5\15"+
    "\1\301\1\15\1\302\1\15\1\0\7\15\6\0\21\15"+
    "\1\303\1\304\1\15\1\305\3\15\1\0\11\15\1\0"+
    "\5\15\1\306\1\15\6\0\17\15\1\307\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\2\15\1\310\3\15\1\0\11\15\1\0\7\15\6\0"+
    "\20\15\1\311\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\42\0\1\312\23\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\313\5\15\1\0\7\15\6\0\16\15\1\314\2\15"+
    "\1\0\1\15\1\315\4\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\316\1\317\4\15\1\320\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\3\15\1\321\1\322"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\2\15\1\323\3\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\324\5\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\5\15\1\325"+
    "\3\15\1\0\7\15\6\0\21\15\1\0\6\15\1\326"+
    "\1\327\10\15\1\0\7\15\54\0\1\330\11\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\0\3\15\1\331\3\15"+
    "\6\0\21\15\1\0\1\15\1\332\4\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\333\1\334\5\15\1\0"+
    "\5\15\1\335\3\15\1\0\7\15\24\0\1\336\41\0"+
    "\16\15\1\337\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\42\0\1\340\1\0\1\341\1\0\1\342\17\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\343\1\15\1\344"+
    "\1\15\1\345\1\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\346\1\347\10\15\1\0\7\15\41\0\1\350"+
    "\24\0\21\57\1\0\6\57\1\0\2\57\1\351\6\57"+
    "\1\0\7\57\6\0\20\57\1\352\1\0\6\57\1\0"+
    "\11\57\1\0\7\57\2\0\5\203\1\353\56\203\1\204"+
    "\1\354\17\204\1\203\6\204\1\203\11\204\1\203\7\204"+
    "\2\203\10\0\1\205\10\0\1\205\1\72\45\0\1\206"+
    "\10\0\1\206\46\0\1\206\10\0\1\210\65\0\1\355"+
    "\34\0\21\15\1\0\1\15\1\356\4\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\1\15\1\357\4\15"+
    "\1\0\11\15\1\0\7\15\6\0\17\15\1\360\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\361\1\362\10\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\363\1\364\10\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\11\15\1\365\1\366"+
    "\6\15\6\0\21\15\1\0\6\15\1\0\3\15\1\367"+
    "\5\15\1\0\7\15\27\0\2\370\73\0\1\371\46\0"+
    "\1\372\2\0\2\373\62\0\1\374\41\0\1\375\76\0"+
    "\1\376\60\0\1\377\56\0\1\u0100\54\0\1\u0101\25\0"+
    "\21\15\1\370\1\u0102\5\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\5\15\1\u0103\3\15"+
    "\1\0\7\15\6\0\21\15\1\0\3\15\1\u0104\2\15"+
    "\1\373\1\u0105\10\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u0106\5\15\1\0\7\15\6\0"+
    "\16\15\1\u0107\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\4\15\1\u0108"+
    "\4\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u0109\3\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u010a\4\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\1\15\1\u010b\7\15\1\0"+
    "\7\15\6\0\21\15\1\0\2\15\1\u010c\3\15\1\0"+
    "\11\15\1\0\7\15\6\0\16\15\1\u010d\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\2\15\1\u010e\6\15\1\0\7\15\6\0"+
    "\16\15\1\u010f\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\11\15\1\u0110"+
    "\1\u0111\6\15\6\0\21\15\1\0\6\15\1\u0112\1\u0113"+
    "\10\15\1\0\7\15\44\0\1\u0114\21\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u0115\3\15\1\0\7\15\15\0"+
    "\1\u0116\50\0\7\15\1\u0117\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\16\15\1\u0118\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\u0119"+
    "\1\u011a\3\15\1\u011b\1\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\4\15\1\u011c\4\15"+
    "\1\0\7\15\6\0\17\15\1\u011d\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\u011e\1\u011f"+
    "\5\15\1\0\11\15\1\0\7\15\35\0\1\u0120\30\0"+
    "\21\15\1\0\5\15\1\u0121\1\0\11\15\1\0\7\15"+
    "\41\0\1\u0122\24\0\21\15\1\0\6\15\1\0\2\15"+
    "\1\u0123\6\15\1\0\7\15\6\0\21\15\1\0\4\15"+
    "\1\u0124\1\15\1\0\11\15\1\0\7\15\15\0\1\u0125"+
    "\11\0\2\u0126\35\0\7\15\1\u0127\11\15\1\u0126\1\u0128"+
    "\5\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u0129"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\5\15\1\u012a"+
    "\1\15\6\0\16\15\1\u012b\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\11\15\1\0\2\15\1\u012c\4\15\24\0\1\u012d\41\0"+
    "\16\15\1\u012e\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\10\15\1\u012f"+
    "\1\0\7\15\6\0\21\15\1\u0130\1\u0131\3\15\1\u0132"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\u0133"+
    "\1\u0134\5\15\1\0\11\15\1\0\7\15\34\0\1\u0135"+
    "\1\0\2\u0136\26\0\21\15\1\0\4\15\1\u0137\1\15"+
    "\1\u0136\1\u0138\10\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\1\15\1\u0139\5\15\6\0"+
    "\16\15\1\u013a\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\5\15\1\u013b\1\0\3\15"+
    "\1\u013c\5\15\1\0\7\15\6\0\21\15\1\0\2\15"+
    "\1\u013d\3\15\1\0\11\15\1\0\7\15\27\0\2\u013e"+
    "\35\0\21\15\1\u013e\1\u013f\5\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\6\15\1\u0140"+
    "\2\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u0141"+
    "\1\15\1\0\11\15\1\0\7\15\31\0\1\u0142\34\0"+
    "\21\15\1\0\1\15\1\u0143\4\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\4\15\1\u0144\1\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u0145"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\17\15\1\u0146"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u0147\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\1\15\1\u0148\4\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u0149"+
    "\1\15\1\0\11\15\1\0\7\15\43\0\1\u014a\22\0"+
    "\21\15\1\0\6\15\1\0\4\15\1\u014b\4\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\3\15\1\u014c"+
    "\5\15\1\0\2\15\1\u014d\4\15\34\0\1\u014e\31\0"+
    "\21\15\1\0\4\15\1\u014f\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\u0150\1\u0151\10\15"+
    "\1\0\7\15\43\0\1\u0152\22\0\21\15\1\0\6\15"+
    "\1\0\4\15\1\u0153\4\15\1\0\7\15\46\0\1\u0154"+
    "\35\0\1\u0155\11\0\2\u0156\54\0\1\u0157\31\0\21\15"+
    "\1\0\6\15\1\0\7\15\1\u0158\1\15\1\0\7\15"+
    "\6\0\16\15\1\u0159\2\15\1\0\6\15\1\u0156\1\u015a"+
    "\10\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u015b"+
    "\1\15\1\0\11\15\1\0\7\15\34\0\1\u015c\31\0"+
    "\21\15\1\0\4\15\1\u015d\1\15\1\0\11\15\1\0"+
    "\7\15\42\0\1\u015e\23\0\21\57\1\0\6\57\1\0"+
    "\3\57\1\u015f\5\57\1\0\7\57\2\0\4\203\1\13"+
    "\1\353\56\203\1\15\1\354\17\204\1\203\6\204\1\203"+
    "\11\204\1\203\7\204\2\203\30\0\1\u0160\33\0\21\15"+
    "\1\0\2\15\1\u0161\3\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\5\15\1\u0162\3\15"+
    "\1\0\7\15\6\0\21\15\1\0\5\15\1\u0163\1\0"+
    "\11\15\1\0\7\15\40\0\1\u0164\25\0\21\15\1\0"+
    "\6\15\1\0\1\15\1\u0165\7\15\1\0\7\15\42\0"+
    "\1\u0166\23\0\21\15\1\0\6\15\1\0\3\15\1\u0167"+
    "\5\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\7\15\1\u0168\1\15\1\0\7\15\36\0\2\u0169\54\0"+
    "\1\u016a\60\0\1\u016b\64\0\1\u016c\42\0\1\u016d\47\0"+
    "\1\u016e\66\0\1\u016f\57\0\1\u0170\57\0\1\u0171\41\0"+
    "\21\15\1\0\6\15\1\u0169\1\u0172\10\15\1\0\7\15"+
    "\6\0\21\15\1\0\4\15\1\u0173\1\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\5\15\1\u0174\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u0175\5\15\1\0\7\15\6\0\17\15\1\u0176"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\7\15\1\u0177\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\16\15\1\u0178\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\16\15\1\u0179\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u017a"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\u017b\1\u017c\10\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\5\15\1\u017d\3\15"+
    "\1\0\7\15\6\0\21\15\1\0\4\15\1\u017e\1\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u017f\3\15\1\0\7\15\15\0\1\u0180"+
    "\50\0\7\15\1\u0181\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\35\0\1\u0182\30\0\21\15\1\0\5\15"+
    "\1\u0183\1\0\11\15\1\0\7\15\25\0\1\u0184\40\0"+
    "\17\15\1\u0185\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\32\0\1\u0186\5\0\1\u0187\1\0\1\u0188\23\0"+
    "\21\15\1\0\2\15\1\u0189\3\15\1\0\1\15\1\u018a"+
    "\1\15\1\u018b\5\15\1\0\7\15\34\0\1\u018c\31\0"+
    "\21\15\1\0\4\15\1\u018d\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\5\15\1\u018e"+
    "\3\15\1\0\7\15\6\0\21\15\1\0\1\15\1\u018f"+
    "\4\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u0190\3\15\1\0\7\15\27\0"+
    "\2\u0191\35\0\21\15\1\u0191\1\u0192\5\15\1\0\11\15"+
    "\1\0\7\15\32\0\1\u0193\1\u0194\32\0\21\15\1\0"+
    "\2\15\1\u0195\1\u0196\2\15\1\0\11\15\1\0\7\15"+
    "\24\0\1\u0197\41\0\16\15\1\u0198\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\u0199\1\u019a\10\15\1\0\7\15\25\0\1\u019b\7\0"+
    "\1\u019c\6\0\1\u019d\3\0\2\u019e\14\0\17\15\1\u019f"+
    "\1\15\1\0\5\15\1\u01a0\1\0\5\15\1\u01a1\3\15"+
    "\1\u019e\1\u01a2\6\15\6\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u01a3\3\15\1\0\7\15\6\0\21\15\1\0"+
    "\1\15\1\u01a4\4\15\1\0\11\15\1\0\7\15\6\0"+
    "\17\15\1\u01a5\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\34\0\1\u01a6\31\0\21\15\1\0\4\15\1\u01a7"+
    "\1\15\1\0\11\15\1\0\7\15\24\0\1\u01a8\41\0"+
    "\16\15\1\u01a9\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\7\15\1\u01aa\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\34\0\1\u01ab\31\0\21\15\1\0"+
    "\4\15\1\u01ac\1\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\u01ad\47\0\1\u01ae\31\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u01af\3\15\1\0\7\15\6\0\21\15\1\0"+
    "\4\15\1\u01b0\1\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\2\15\1\u01b1\3\15\1\0\2\15\1\u01b2"+
    "\6\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u01b3\3\15\1\0\7\15\6\0\16\15\1\u01b4"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u01b5\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\7\15\1\u01b6\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\16\15\1\u01b7\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u01b8"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\32\0"+
    "\1\u01b9\33\0\21\15\1\0\2\15\1\u01ba\3\15\1\0"+
    "\11\15\1\0\7\15\6\0\17\15\1\u01bb\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u01bc"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\4\15\1\u01bd\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\u01be\1\u01bf\5\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\3\15\1\u01c0\2\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\11\15\1\0\1\15\1\u01c1\5\15\15\0\1\u01c2"+
    "\50\0\7\15\1\u01c3\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\4\15\1\u01c4\1\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\4\15"+
    "\1\u01c5\1\15\1\0\11\15\1\0\7\15\15\0\1\u01c6"+
    "\50\0\7\15\1\u01c7\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\55\0\1\u01c8\10\0\21\15\1\0\6\15"+
    "\1\0\11\15\1\0\4\15\1\u01c9\2\15\31\0\1\u01ca"+
    "\34\0\21\15\1\0\1\15\1\u01cb\4\15\1\0\11\15"+
    "\1\0\7\15\31\0\1\u01cc\43\0\1\u01cd\104\0\1\u01ce"+
    "\64\0\1\u01cf\16\0\21\15\1\0\1\15\1\u01d0\4\15"+
    "\1\0\11\15\1\0\7\15\6\0\7\15\1\u01d1\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\u01d2\5\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\10\15\1\u01d3\1\0"+
    "\7\15\24\0\1\u01d4\41\0\16\15\1\u01d5\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\25\0\1\u01d6\40\0"+
    "\17\57\1\u01d7\1\57\1\0\6\57\1\0\11\57\1\0"+
    "\7\57\33\0\1\u01d8\32\0\21\15\1\0\3\15\1\u01d9"+
    "\2\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\1\15\1\u01da\4\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\10\15\1\u01db\1\0\7\15"+
    "\24\0\1\u01dc\41\0\16\15\1\u01dd\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\27\0\2\u01de\35\0\21\15"+
    "\1\u01de\1\u01df\5\15\1\0\11\15\1\0\7\15\6\0"+
    "\17\15\1\u01e0\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\31\0\1\u01e1\43\0\1\u01e2\76\0\1\u01e3\64\0"+
    "\1\u01e4\50\0\1\u01e5\52\0\1\u01e6\47\0\1\u01e7\50\0"+
    "\21\15\1\0\1\15\1\u01e8\4\15\1\0\11\15\1\0"+
    "\7\15\6\0\7\15\1\u01e9\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u01ea"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\2\15\1\u01eb\6\15\1\0\7\15\6\0"+
    "\21\15\1\0\2\15\1\u01ec\3\15\1\0\11\15\1\0"+
    "\7\15\6\0\17\15\1\u01ed\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\7\15\1\u01ee\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\42\0\1\u01ef\23\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u01f0\5\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\10\15\1\u01f1"+
    "\1\0\7\15\6\0\7\15\1\u01f2\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\34\0\1\u01f3\31\0\21\15"+
    "\1\0\4\15\1\u01f4\1\15\1\0\11\15\1\0\7\15"+
    "\25\0\1\u01f5\40\0\17\15\1\u01f6\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\44\0\1\u01f7\21\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u01f8\3\15\1\0\7\15"+
    "\25\0\1\u01f9\70\0\2\u01fa\44\0\1\u01fb\41\0\17\15"+
    "\1\u01fc\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\u01fa\1\u01fd\10\15\1\0"+
    "\7\15\6\0\16\15\1\u01fe\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\25\0\1\u01ff\40\0\17\15\1\u0200"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\1\15\1\u0201\4\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\3\15\1\u0202"+
    "\5\15\1\0\7\15\6\0\17\15\1\u0203\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\15\0\1\u0204\6\0"+
    "\1\u0205\41\0\7\15\1\u0206\6\15\1\u0207\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\24\0\1\u0208\71\0"+
    "\2\u0209\26\0\16\15\1\u020a\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\u0209"+
    "\1\u020b\10\15\1\0\7\15\35\0\1\u020c\30\0\21\15"+
    "\1\0\5\15\1\u020d\1\0\11\15\1\0\7\15\34\0"+
    "\1\u020e\54\0\1\u020f\61\0\1\u0210\50\0\1\u0211\41\0"+
    "\21\15\1\0\4\15\1\u0212\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\1\15\1\u0213\4\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\3\15\1\u0214"+
    "\2\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u0215"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\17\15\1\u0216\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\5\15\1\u0217"+
    "\3\15\1\0\7\15\6\0\21\15\1\0\2\15\1\u0218"+
    "\3\15\1\0\11\15\1\0\7\15\52\0\1\u0219\13\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\1\15\1\u021a"+
    "\5\15\44\0\1\u021b\21\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u021c\3\15\1\0\7\15\6\0\21\15\1\0"+
    "\2\15\1\u021d\3\15\1\0\11\15\1\0\7\15\25\0"+
    "\1\u021e\40\0\17\15\1\u021f\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\31\0\1\u0220\64\0\2\u0221\26\0"+
    "\21\15\1\0\1\15\1\u0222\4\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\u0221\1\u0223\10\15"+
    "\1\0\7\15\6\0\21\15\1\0\6\15\1\u0224\1\u0225"+
    "\10\15\1\0\7\15\6\0\21\15\1\0\1\15\1\u0226"+
    "\4\15\1\0\11\15\1\0\7\15\6\0\7\15\1\u0227"+
    "\11\15\1\0\6\15\1\0\11\15\1\0\2\15\1\u0228"+
    "\4\15\6\0\7\15\1\u0229\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u022a"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u022b\3\15\1\0\7\15\6\0"+
    "\21\15\1\0\5\15\1\u022c\1\0\11\15\1\0\7\15"+
    "\33\0\1\u022d\32\0\21\15\1\0\3\15\1\u022e\2\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u022f\5\15\1\0\7\15\6\0\21\15"+
    "\1\u0230\1\u0231\5\15\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u0232\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\4\15\1\u0233\1\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\6\15\1\u0234\2\15\1\0\7\15\27\0\2\u0235\35\0"+
    "\21\15\1\u0235\1\u0236\5\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\1\15\1\u0237\4\15\1\0\11\15"+
    "\1\0\7\15\35\0\1\u0238\2\0\1\u0239\25\0\21\15"+
    "\1\0\5\15\1\u023a\1\0\1\15\1\u023b\7\15\1\0"+
    "\7\15\31\0\1\u023c\34\0\21\15\1\0\1\15\1\u023d"+
    "\4\15\1\0\11\15\1\0\7\15\33\0\1\u023e\32\0"+
    "\21\15\1\0\3\15\1\u023f\2\15\1\0\11\15\1\0"+
    "\7\15\56\0\1\u0240\51\0\2\u0241\47\0\1\u0242\24\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\5\15\1\u0243"+
    "\1\15\6\0\21\15\1\0\6\15\1\0\11\15\1\u0241"+
    "\1\u0244\6\15\6\0\21\15\1\0\6\15\1\0\2\15"+
    "\1\u0245\6\15\1\0\7\15\15\0\1\u0246\50\0\7\15"+
    "\1\u0247\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\32\0\1\u0248\33\0\21\57\1\0\2\57\1\u0249\3\57"+
    "\1\0\11\57\1\0\7\57\34\0\1\u024a\31\0\21\15"+
    "\1\0\4\15\1\u024b\1\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\3\15\1\u024c\2\15\1\0\11\15"+
    "\1\0\7\15\34\0\1\u024d\31\0\21\15\1\0\4\15"+
    "\1\u024e\1\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u024f\3\15\1\0\7\15"+
    "\42\0\1\u0250\60\0\1\u0251\1\u0252\46\0\1\u0253\41\0"+
    "\1\u0254\104\0\1\u0255\62\0\1\u0256\20\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u0257\5\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\4\15\1\u0258\1\u0259\3\15"+
    "\1\0\7\15\6\0\21\15\1\0\3\15\1\u025a\2\15"+
    "\1\0\11\15\1\0\7\15\6\0\7\15\1\u025b\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\u025c\5\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\6\15\1\u025d\2\15"+
    "\1\0\7\15\24\0\1\u025e\41\0\16\15\1\u025f\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0260\3\15\1\0\7\15"+
    "\52\0\1\u0261\13\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\1\15\1\u0262\5\15\32\0\1\u0263\33\0\21\15"+
    "\1\0\2\15\1\u0264\3\15\1\0\11\15\1\0\7\15"+
    "\52\0\1\u0265\13\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\1\15\1\u0266\5\15\52\0\1\u0267\32\0\1\u0268"+
    "\66\0\1\u0269\31\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\1\15\1\u026a\5\15\6\0\17\15\1\u026b\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\4\15\1\u026c\1\15\1\0\11\15\1\0\7\15"+
    "\42\0\1\u026d\23\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\u026e\5\15\1\0\7\15\6\0\21\15\1\0\2\15"+
    "\1\u026f\3\15\1\0\11\15\1\0\7\15\6\0\16\15"+
    "\1\u0270\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\3\15\1\u0271\5\15"+
    "\1\0\7\15\35\0\1\u0272\51\0\2\u0273\35\0\21\15"+
    "\1\0\5\15\1\u0274\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\u0273\1\u0275\5\15\1\0\11\15\1\0\7\15"+
    "\34\0\1\u0276\31\0\21\15\1\0\4\15\1\u0277\1\15"+
    "\1\0\11\15\1\0\7\15\25\0\1\u0278\40\0\17\15"+
    "\1\u0279\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\15\0\1\u027a\71\0\2\u027b\61\0\1\u027c\51\0\1\u027d"+
    "\41\0\7\15\1\u027e\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\u027b\1\u027f\5\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\2\15\1\u0280"+
    "\3\15\1\0\11\15\1\0\7\15\6\0\16\15\1\u0281"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\4\15\1\u0282\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\11\15\1\u0283"+
    "\1\u0284\6\15\15\0\1\u0285\50\0\7\15\1\u0286\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\u0287\1\u0288\10\15\1\0\7\15\35\0"+
    "\1\u0289\30\0\21\15\1\0\5\15\1\u028a\1\0\11\15"+
    "\1\0\7\15\33\0\1\u028b\55\0\1\u028c\34\0\21\15"+
    "\1\0\3\15\1\u028d\2\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\1\15\1\u028e\4\15\1\0\11\15"+
    "\1\0\7\15\42\0\1\u028f\23\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u0290\5\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\u0291\5\15\1\0\7\15"+
    "\6\0\21\15\1\0\5\15\1\u0292\1\0\11\15\1\u0293"+
    "\1\u0294\6\15\6\0\16\15\1\u0295\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\1\15\1\u0296\7\15\1\0\7\15\6\0\21\15"+
    "\1\0\6\15\1\u0297\1\u0298\10\15\1\0\7\15\6\0"+
    "\16\15\1\u0299\2\15\1\0\6\15\1\0\5\15\1\u029a"+
    "\3\15\1\0\7\15\6\0\21\15\1\0\4\15\1\u029b"+
    "\1\15\1\0\11\15\1\0\7\15\34\0\1\u029c\31\0"+
    "\21\15\1\0\4\15\1\u029d\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\2\15\1\u029e"+
    "\6\15\1\0\7\15\6\0\7\15\1\u029f\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\u02a0\1\u02a1\10\15\1\0\7\15\34\0\1\u02a2"+
    "\31\0\21\15\1\0\4\15\1\u02a3\1\15\1\0\11\15"+
    "\1\0\7\15\25\0\1\u02a4\56\0\1\u02a5\41\0\17\15"+
    "\1\u02a6\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\16\15\1\u02a7\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\42\0\1\u02a8\23\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u02a9\5\15\1\0\7\15\34\0\1\u02aa"+
    "\31\0\21\15\1\0\4\15\1\u02ab\1\15\1\0\11\15"+
    "\1\0\7\15\24\0\1\u02ac\41\0\16\15\1\u02ad\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\44\0\1\u02ae"+
    "\21\0\21\15\1\0\6\15\1\0\5\15\1\u02af\3\15"+
    "\1\0\7\15\24\0\1\u02b0\41\0\16\15\1\u02b1\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\4\15\1\u02b2\1\15\1\0\11\15\1\0\7\15"+
    "\15\0\1\u02b3\50\0\7\15\1\u02b4\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\0\11\15\1\0\1\15\1\u02b5\5\15\25\0\1\u02b6"+
    "\70\0\2\u02b7\64\0\1\u02b8\72\0\1\u02b9\41\0\1\u02ba"+
    "\54\0\2\u02bb\26\0\17\15\1\u02bc\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\6\15"+
    "\1\u02b7\1\u02bd\10\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u02be\3\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\6\15\1\u02bf"+
    "\6\0\21\15\1\0\6\15\1\0\2\15\1\u02c0\6\15"+
    "\1\0\7\15\6\0\21\15\1\0\6\15\1\u02bb\1\u02c1"+
    "\10\15\1\0\7\15\6\0\21\15\1\0\3\15\1\u02c2"+
    "\2\15\1\0\11\15\1\0\7\15\43\0\1\u02c3\22\0"+
    "\21\15\1\0\6\15\1\0\4\15\1\u02c4\4\15\1\0"+
    "\7\15\15\0\1\u02c5\50\0\7\15\1\u02c6\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\24\0\1\u02c7\41\0"+
    "\16\15\1\u02c8\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\34\0\1\u02c9\31\0\21\15\1\0\4\15\1\u02ca"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u02cb\5\15\1\0\7\15\6\0"+
    "\21\15\1\0\5\15\1\u02cc\1\0\11\15\1\0\7\15"+
    "\32\0\1\u02cd\33\0\21\15\1\0\2\15\1\u02ce\3\15"+
    "\1\0\11\15\1\0\7\15\32\0\1\u02cf\33\0\21\15"+
    "\1\0\2\15\1\u02d0\3\15\1\0\11\15\1\0\7\15"+
    "\27\0\2\u02d1\63\0\1\u02d2\47\0\1\u02d3\76\0\1\u02d4"+
    "\22\0\21\15\1\u02d1\1\u02d5\5\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\4\15\1\u02d6\1\15\1\0"+
    "\11\15\1\0\7\15\6\0\16\15\1\u02d7\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u02d8\4\15\1\0\7\15\6\0"+
    "\16\15\1\u02d9\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\15\0\1\u02da\50\0\7\15\1\u02db\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\46\0\1\u02dc\17\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u02dd\1\15\1\0"+
    "\7\15\26\0\1\u02de\37\0\20\15\1\u02df\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\50\0\2\u02e0\14\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\u02e0\1\u02e1\6\15\34\0"+
    "\1\u02e2\65\0\1\u02e3\23\0\21\15\1\0\4\15\1\u02e4"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u02e5\5\15\1\0\7\15\24\0"+
    "\1\u02e6\41\0\16\15\1\u02e7\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\1\15\1\u02e8"+
    "\4\15\1\0\11\15\1\0\7\15\24\0\1\u02e9\41\0"+
    "\16\15\1\u02ea\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\3\15\1\u02eb"+
    "\5\15\1\0\7\15\6\0\21\15\1\0\6\15\1\u02ec"+
    "\1\u02ed\10\15\1\0\7\15\41\0\1\u02ee\24\0\21\15"+
    "\1\0\6\15\1\0\2\15\1\u02ef\6\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\7\15\1\u02f0\1\15"+
    "\1\0\7\15\6\0\16\15\1\u0299\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\36\0\2\u02f1\26\0\21\15"+
    "\1\0\6\15\1\u02f1\1\u02f2\10\15\1\0\7\15\6\0"+
    "\21\15\1\0\2\15\1\u02f3\3\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\6\15\1\u02f4"+
    "\2\15\1\0\7\15\40\0\1\u02f5\25\0\21\15\1\0"+
    "\6\15\1\0\1\15\1\u02f6\7\15\1\0\7\15\52\0"+
    "\1\u02f7\13\0\21\15\1\0\6\15\1\0\11\15\1\0"+
    "\1\15\1\u02f8\5\15\46\0\1\u02f9\55\0\1\u02fa\21\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u02fb\1\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\5\15\1\u02fc"+
    "\3\15\1\0\7\15\34\0\1\u02fd\31\0\21\15\1\0"+
    "\4\15\1\u02fe\1\15\1\0\11\15\1\0\7\15\24\0"+
    "\1\u02ff\41\0\16\15\1\u0300\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\24\0\1\u0301\41\0\16\15\1\u0302"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u0303\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\43\0\1\u0304\22\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u0305\4\15\1\0\7\15\27\0\2\u0306\72\0"+
    "\1\u0307\40\0\1\u0308\66\0\1\u0309\56\0\1\u030a\101\0"+
    "\1\u030b\11\0\21\15\1\u0306\1\u030c\5\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\6\15\1\0\4\15"+
    "\1\u030d\4\15\1\0\7\15\6\0\16\15\1\u030e\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\3\15\1\u030f\2\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\2\15\1\u0310\3\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\3\15\1\u0311\3\15\6\0\21\15\1\0\2\15"+
    "\1\u0312\3\15\1\0\11\15\1\0\7\15\24\0\1\u0313"+
    "\41\0\16\15\1\u0314\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\43\0\1\u0315\22\0\21\15\1\0\6\15"+
    "\1\0\4\15\1\u0316\4\15\1\0\7\15\44\0\1\u0317"+
    "\21\0\21\15\1\0\6\15\1\0\5\15\1\u0318\3\15"+
    "\1\0\7\15\6\0\21\15\1\0\4\15\1\u0319\1\15"+
    "\1\0\11\15\1\0\7\15\6\0\16\15\1\u031a\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\25\0\1\u031b"+
    "\40\0\17\15\1\u031c\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\53\0\1\u031d\33\0\2\u031e\60\0\1\u031f"+
    "\34\0\21\15\1\0\6\15\1\0\11\15\1\0\2\15"+
    "\1\u0320\4\15\6\0\21\15\1\u031e\1\u0321\5\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\1\15\1\u0322"+
    "\4\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\7\15\1\u0323\1\15\1\0\7\15\31\0"+
    "\1\u0324\34\0\21\15\1\0\1\15\1\u0325\4\15\1\0"+
    "\11\15\1\0\7\15\24\0\1\u0326\41\0\16\15\1\u0327"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\u0328\21\0\21\15\1\0\6\15\1\0\5\15\1\u0329"+
    "\3\15\1\0\7\15\24\0\1\u032a\41\0\16\15\1\u032b"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\15\0"+
    "\1\u032c\50\0\7\15\1\u032d\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u032e\5\15\1\0\7\15\24\0\1\u032f\41\0"+
    "\16\15\1\u0330\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\4\15\1\u0331\1\15\1\0"+
    "\11\15\1\0\7\15\25\0\1\u0332\40\0\17\15\1\u0333"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\47\0"+
    "\1\u0334\16\0\21\15\1\0\6\15\1\0\10\15\1\u0335"+
    "\1\0\7\15\6\0\7\15\1\u0336\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\31\0\1\u0337\34\0\21\15"+
    "\1\0\1\15\1\u0338\4\15\1\0\11\15\1\0\7\15"+
    "\6\0\16\15\1\u0339\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\6\15\1\u033a\1\u033b"+
    "\10\15\1\0\7\15\24\0\1\u033c\41\0\16\15\1\u033d"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\32\0"+
    "\1\u033e\33\0\21\15\1\0\2\15\1\u033f\3\15\1\0"+
    "\11\15\1\0\7\15\27\0\2\u0340\35\0\21\15\1\u0340"+
    "\1\u0341\5\15\1\0\11\15\1\0\7\15\25\0\1\u0342"+
    "\40\0\17\15\1\u0343\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\43\0\1\u0344\22\0\21\15\1\0\6\15"+
    "\1\0\4\15\1\u0345\4\15\1\0\7\15\27\0\2\u0346"+
    "\35\0\21\15\1\u0346\1\u0347\5\15\1\0\11\15\1\0"+
    "\7\15\6\0\7\15\1\u0348\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\44\0\1\u0349\21\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u034a\3\15\1\0\7\15\27\0"+
    "\2\u034b\62\0\1\u034c\55\0\1\u034d\52\0\1\u034e\57\0"+
    "\1\u034f\41\0\21\15\1\u034b\1\u0350\5\15\1\0\11\15"+
    "\1\0\7\15\6\0\21\15\1\0\3\15\1\u0351\2\15"+
    "\1\0\11\15\1\0\7\15\6\0\21\15\1\0\1\15"+
    "\1\u0352\4\15\1\0\11\15\1\0\7\15\6\0\16\15"+
    "\1\u0353\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\16\15\1\u0354\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\16\15\1\u0355\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\25\0\1\u0356\40\0\17\15"+
    "\1\u0357\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\7\15\1\u0358\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\27\0\2\u0359\35\0\21\15\1\u0359\1\u035a"+
    "\5\15\1\0\11\15\1\0\7\15\46\0\1\u035b\44\0"+
    "\1\u035c\32\0\21\15\1\0\6\15\1\0\7\15\1\u035d"+
    "\1\15\1\0\7\15\6\0\21\15\1\0\3\15\1\u035e"+
    "\2\15\1\0\11\15\1\0\7\15\6\0\7\15\1\u035f"+
    "\11\15\1\0\6\15\1\0\11\15\1\0\7\15\33\0"+
    "\1\u0360\32\0\21\15\1\0\3\15\1\u0361\2\15\1\0"+
    "\11\15\1\0\7\15\41\0\1\u0362\24\0\21\15\1\0"+
    "\6\15\1\0\2\15\1\u0363\6\15\1\0\7\15\25\0"+
    "\1\u0364\40\0\17\15\1\u0365\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\43\0\1\u0366\22\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u0367\4\15\1\0\7\15\6\0"+
    "\21\15\1\0\4\15\1\u0368\1\15\1\0\11\15\1\0"+
    "\7\15\43\0\1\u0369\22\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u036a\4\15\1\0\7\15\15\0\1\u036b\50\0"+
    "\7\15\1\u036c\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\34\0\1\u036d\31\0\21\15\1\0\4\15\1\u036e"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\7\15\1\u036f\1\15\1\0\7\15\42\0"+
    "\1\u0370\23\0\21\15\1\0\6\15\1\0\3\15\1\u0371"+
    "\5\15\1\0\7\15\44\0\1\u0372\21\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u0373\3\15\1\0\7\15\15\0"+
    "\1\u0374\50\0\7\15\1\u0375\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\24\0\1\u0376\41\0\16\15\1\u0377"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\2\u0378\26\0\21\15\1\0\6\15\1\u0378\1\u0379\10\15"+
    "\1\0\7\15\32\0\1\u037a\33\0\21\15\1\0\2\15"+
    "\1\u037b\3\15\1\0\11\15\1\0\7\15\31\0\1\u037c"+
    "\34\0\21\15\1\0\1\15\1\u037d\4\15\1\0\11\15"+
    "\1\0\7\15\31\0\1\u037e\34\0\21\15\1\0\1\15"+
    "\1\u037f\4\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\u0380\1\u0381\5\15\1\0\11\15\1\0\7\15\24\0"+
    "\1\u0382\41\0\16\15\1\u0383\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\15\0\1\u0384\105\0\1\u0385\50\0"+
    "\1\u0386\71\0\1\u0387\17\0\7\15\1\u0388\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u0389\4\15\1\0\7\15\6\0"+
    "\21\15\1\0\4\15\1\u038a\1\15\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\7\15\1\u038b"+
    "\1\15\1\0\7\15\44\0\1\u038c\21\0\21\15\1\0"+
    "\6\15\1\0\5\15\1\u038d\3\15\1\0\7\15\6\0"+
    "\21\15\1\0\5\15\1\u038e\1\0\11\15\1\0\7\15"+
    "\27\0\2\u038f\35\0\21\15\1\u038f\1\u0390\5\15\1\0"+
    "\11\15\1\0\7\15\34\0\1\u0391\31\0\21\15\1\0"+
    "\4\15\1\u0392\1\15\1\0\11\15\1\0\7\15\6\0"+
    "\20\15\1\u0393\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\34\0\1\u0394\31\0\21\15\1\0\4\15\1\u0395\1\15"+
    "\1\0\11\15\1\0\7\15\44\0\1\u0396\21\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0397\3\15\1\0\7\15"+
    "\44\0\1\u0398\21\0\21\15\1\0\6\15\1\0\5\15"+
    "\1\u0399\3\15\1\0\7\15\25\0\1\u039a\40\0\17\15"+
    "\1\u039b\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\5\15\1\u039c\3\15"+
    "\1\0\7\15\31\0\1\u039d\34\0\21\15\1\0\1\15"+
    "\1\u039e\4\15\1\0\11\15\1\0\7\15\35\0\1\u039f"+
    "\30\0\21\15\1\0\5\15\1\u03a0\1\0\11\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\u03a1\1\u03a2\10\15"+
    "\1\0\7\15\27\0\2\u03a3\35\0\21\15\1\u03a3\1\u03a4"+
    "\5\15\1\0\11\15\1\0\7\15\46\0\1\u03a5\17\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u03a6\1\15\1\0"+
    "\7\15\31\0\1\u03a7\34\0\21\15\1\0\1\15\1\u03a8"+
    "\4\15\1\0\11\15\1\0\7\15\33\0\1\u03a9\32\0"+
    "\21\15\1\0\3\15\1\u03aa\2\15\1\0\11\15\1\0"+
    "\7\15\32\0\1\u03ab\33\0\21\15\1\0\2\15\1\u03ac"+
    "\3\15\1\0\11\15\1\0\7\15\24\0\1\u03ad\41\0"+
    "\16\15\1\u03ae\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\45\0\1\u03af\20\0\21\15\1\0\6\15\1\0"+
    "\6\15\1\u03b0\2\15\1\0\7\15\42\0\1\u03b1\32\0"+
    "\1\u03b2\66\0\1\u03b3\41\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u03b4\5\15\1\0\7\15\6\0\7\15\1\u03b5"+
    "\11\15\1\0\6\15\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u03b6\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\34\0\1\u03b7\31\0\21\15\1\0\4\15\1\u03b8"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\2\15\1\u03b9\3\15\1\0\11\15\1\0\7\15\6\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\1\15\1\u03ba"+
    "\5\15\24\0\1\u03bb\41\0\16\15\1\u03bc\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\52\0\1\u03bd\13\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\1\15\1\u03be"+
    "\5\15\34\0\1\u03bf\31\0\21\15\1\0\4\15\1\u03c0"+
    "\1\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\1\15\1\u03c1\4\15\1\0\11\15\1\0\7\15\33\0"+
    "\1\u03c2\32\0\21\15\1\0\3\15\1\u03c3\2\15\1\0"+
    "\11\15\1\0\7\15\31\0\1\u03c4\34\0\21\15\1\0"+
    "\1\15\1\u03c5\4\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\u03c6\21\0\21\15\1\0\6\15\1\0\5\15\1\u03c7"+
    "\3\15\1\0\7\15\34\0\1\u03c8\31\0\21\15\1\0"+
    "\4\15\1\u03c9\1\15\1\0\11\15\1\0\7\15\24\0"+
    "\1\u03ca\41\0\16\15\1\u03cb\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\42\0\1\u03cc\23\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u03cd\5\15\1\0\7\15\34\0"+
    "\1\u03ce\31\0\21\15\1\0\4\15\1\u03cf\1\15\1\0"+
    "\11\15\1\0\7\15\33\0\1\u03d0\32\0\21\15\1\0"+
    "\3\15\1\u03d1\2\15\1\0\11\15\1\0\7\15\34\0"+
    "\1\u03d2\31\0\21\15\1\0\4\15\1\u03d3\1\15\1\0"+
    "\11\15\1\0\7\15\24\0\1\u03d4\41\0\16\15\1\u03d5"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\31\0"+
    "\1\u03d6\63\0\1\u03d7\30\0\21\15\1\0\1\15\1\u03d8"+
    "\4\15\1\0\11\15\1\0\7\15\6\0\21\15\1\0"+
    "\5\15\1\u03d9\1\0\11\15\1\0\7\15\15\0\1\u03da"+
    "\50\0\7\15\1\u03db\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\6\0\17\15\1\u03dc\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\6\0\7\15\1\u03dd\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\24\0\1\u03de"+
    "\41\0\16\15\1\u03df\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\47\0\1\u03e0\16\0\21\15\1\0\6\15"+
    "\1\0\10\15\1\u03e1\1\0\7\15\6\0\21\15\1\0"+
    "\2\15\1\u03e2\3\15\1\0\11\15\1\0\7\15\34\0"+
    "\1\u03e3\31\0\21\15\1\0\4\15\1\u03e4\1\15\1\0"+
    "\11\15\1\0\7\15\27\0\2\u03e5\35\0\21\15\1\u03e5"+
    "\1\u03e6\5\15\1\0\11\15\1\0\7\15\24\0\1\u03e7"+
    "\41\0\16\15\1\u03e8\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\41\0\1\u03e9\24\0\21\15\1\0\6\15"+
    "\1\0\2\15\1\u03ea\6\15\1\0\7\15\34\0\1\u03eb"+
    "\31\0\21\15\1\0\4\15\1\u03ec\1\15\1\0\11\15"+
    "\1\0\7\15\34\0\1\u03ed\31\0\21\15\1\0\4\15"+
    "\1\u03ee\1\15\1\0\11\15\1\0\7\15\44\0\1\u03ef"+
    "\21\0\21\15\1\0\6\15\1\0\5\15\1\u03f0\3\15"+
    "\1\0\7\15\31\0\1\u03f1\34\0\21\15\1\0\1\15"+
    "\1\u03f2\4\15\1\0\11\15\1\0\7\15\53\0\1\u03f3"+
    "\12\0\21\15\1\0\6\15\1\0\11\15\1\0\2\15"+
    "\1\u03f4\4\15\6\0\21\15\1\u03f5\1\u03f6\5\15\1\0"+
    "\11\15\1\0\7\15\6\0\21\15\1\0\6\15\1\0"+
    "\6\15\1\u03f7\2\15\1\0\7\15\34\0\1\u03f8\31\0"+
    "\21\15\1\0\4\15\1\u03f9\1\15\1\0\11\15\1\0"+
    "\7\15\35\0\1\u03fa\30\0\21\15\1\0\5\15\1\u03fb"+
    "\1\0\11\15\1\0\7\15\44\0\1\u03fc\21\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u03fd\3\15\1\0\7\15"+
    "\36\0\2\u03fe\26\0\21\15\1\0\6\15\1\u03fe\1\u03ff"+
    "\10\15\1\0\7\15\36\0\2\u0400\26\0\21\15\1\0"+
    "\6\15\1\u0400\1\u0401\10\15\1\0\7\15\24\0\1\u0402"+
    "\17\0\1\u0403\21\0\16\15\1\u0404\2\15\1\0\6\15"+
    "\1\0\5\15\1\u0405\3\15\1\0\7\15\27\0\2\u0406"+
    "\35\0\21\15\1\u0406\1\u0407\5\15\1\0\11\15\1\0"+
    "\7\15\25\0\1\u0408\40\0\17\15\1\u0409\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\27\0\2\u040a\35\0"+
    "\21\15\1\u040a\1\u040b\5\15\1\0\11\15\1\0\7\15"+
    "\6\0\21\15\1\0\6\15\1\0\5\15\1\u040c\3\15"+
    "\1\0\7\15\27\0\2\u040d\35\0\21\15\1\u040d\1\u040e"+
    "\5\15\1\0\11\15\1\0\7\15\34\0\1\u040f\31\0"+
    "\21\15\1\0\4\15\1\u0410\1\15\1\0\11\15\1\0"+
    "\7\15\24\0\1\u0411\41\0\16\15\1\u0412\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\31\0\1\u0413\34\0"+
    "\21\15\1\0\1\15\1\u0414\4\15\1\0\11\15\1\0"+
    "\7\15\42\0\1\u0415\23\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u0416\5\15\1\0\7\15\46\0\1\u0417\35\0"+
    "\1\u0402\41\0\21\15\1\0\6\15\1\0\7\15\1\u0418"+
    "\1\15\1\0\7\15\6\0\16\15\1\u0404\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\34\0\1\u0419\31\0"+
    "\21\15\1\0\4\15\1\u041a\1\15\1\0\11\15\1\0"+
    "\7\15\43\0\1\u041b\22\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u041c\4\15\1\0\7\15\6\0\16\15\1\u041d"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\2\u041e\26\0\21\15\1\0\6\15\1\u041e\1\u041f\10\15"+
    "\1\0\7\15\24\0\1\u0420\41\0\16\15\1\u0421\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\42\0\1\u0422"+
    "\23\0\21\15\1\0\6\15\1\0\3\15\1\u0423\5\15"+
    "\1\0\7\15\41\0\1\u0424\24\0\21\15\1\0\6\15"+
    "\1\0\2\15\1\u0425\6\15\1\0\7\15\15\0\1\u0426"+
    "\50\0\7\15\1\u0427\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\27\0\2\u0428\35\0\21\15\1\u0428\1\u0429"+
    "\5\15\1\0\11\15\1\0\7\15\43\0\1\u042a\22\0"+
    "\21\15\1\0\6\15\1\0\4\15\1\u042b\4\15\1\0"+
    "\7\15\6\0\16\15\1\u042c\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\31\0\1\u042d\34\0\21\15\1\0"+
    "\1\15\1\u042e\4\15\1\0\11\15\1\0\7\15\27\0"+
    "\2\u042f\35\0\21\15\1\u042f\1\u0430\5\15\1\0\11\15"+
    "\1\0\7\15\46\0\1\u0431\17\0\21\15\1\0\6\15"+
    "\1\0\7\15\1\u0432\1\15\1\0\7\15\36\0\2\u0433"+
    "\26\0\21\15\1\0\6\15\1\u0433\1\u0434\10\15\1\0"+
    "\7\15\6\0\21\15\1\0\6\15\1\0\5\15\1\u0435"+
    "\3\15\1\0\7\15\42\0\1\u0436\23\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u0437\5\15\1\0\7\15\36\0"+
    "\2\u0438\26\0\21\15\1\0\6\15\1\u0438\1\u0439\10\15"+
    "\1\0\7\15\42\0\1\u043a\23\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u043b\5\15\1\0\7\15\6\0\21\15"+
    "\1\0\1\15\1\u043c\4\15\1\0\11\15\1\0\7\15"+
    "\15\0\1\u043d\50\0\7\15\1\u043e\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\44\0\1\u043f\21\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0440\3\15\1\0\7\15"+
    "\41\0\1\u0441\24\0\21\15\1\0\6\15\1\0\2\15"+
    "\1\u0442\6\15\1\0\7\15\6\0\21\15\1\0\3\15"+
    "\1\u0443\2\15\1\0\11\15\1\0\7\15\34\0\1\u0444"+
    "\31\0\21\15\1\0\4\15\1\u0445\1\15\1\0\11\15"+
    "\1\0\7\15\24\0\1\u0446\41\0\16\15\1\u0447\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\6\0\21\15"+
    "\1\0\4\15\1\u0448\1\15\1\0\11\15\1\0\7\15"+
    "\44\0\1\u0449\21\0\21\15\1\0\6\15\1\0\5\15"+
    "\1\u044a\3\15\1\0\7\15\35\0\1\u044b\30\0\21\15"+
    "\1\0\5\15\1\u044c\1\0\11\15\1\0\7\15\6\0"+
    "\16\15\1\u044d\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\25\0\1\u044e\40\0\17\15\1\u044f\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\34\0\1\u0450\31\0"+
    "\21\15\1\0\4\15\1\u0451\1\15\1\0\11\15\1\0"+
    "\7\15\35\0\1\u0452\30\0\21\15\1\0\5\15\1\u0453"+
    "\1\0\11\15\1\0\7\15\36\0\2\u0454\26\0\21\15"+
    "\1\0\6\15\1\u0454\1\u0455\10\15\1\0\7\15\24\0"+
    "\1\u0456\41\0\16\15\1\u0457\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\31\0\1\u0458\34\0\21\15\1\0"+
    "\1\15\1\u0459\4\15\1\0\11\15\1\0\7\15\15\0"+
    "\1\u045a\50\0\7\15\1\u045b\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\42\0\1\u045c\23\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u045d\5\15\1\0\7\15\35\0"+
    "\1\u045e\30\0\21\15\1\0\5\15\1\u045f\1\0\11\15"+
    "\1\0\7\15\15\0\1\u0460\50\0\7\15\1\u0461\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\31\0\1\u0462"+
    "\34\0\21\15\1\0\1\15\1\u0463\4\15\1\0\11\15"+
    "\1\0\7\15\34\0\1\u0464\31\0\21\15\1\0\4\15"+
    "\1\u0465\1\15\1\0\11\15\1\0\7\15\27\0\2\u0466"+
    "\35\0\21\15\1\u0466\1\u0467\5\15\1\0\11\15\1\0"+
    "\7\15\44\0\1\u0468\21\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u0469\3\15\1\0\7\15\34\0\1\u046a\31\0"+
    "\21\15\1\0\4\15\1\u046b\1\15\1\0\11\15\1\0"+
    "\7\15\25\0\1\u046c\40\0\17\15\1\u046d\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\27\0\2\u046e\35\0"+
    "\21\15\1\u046e\1\u046f\5\15\1\0\11\15\1\0\7\15"+
    "\35\0\1\u0470\30\0\21\15\1\0\5\15\1\u0471\1\0"+
    "\11\15\1\0\7\15\24\0\1\u0472\41\0\16\15\1\u0473"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\15\0"+
    "\1\u0474\50\0\7\15\1\u0475\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\35\0\1\u0476\30\0\21\15\1\0"+
    "\5\15\1\u0477\1\0\11\15\1\0\7\15\31\0\1\u0478"+
    "\34\0\21\15\1\0\1\15\1\u0479\4\15\1\0\11\15"+
    "\1\0\7\15\27\0\2\u047a\35\0\21\15\1\u047a\1\u047b"+
    "\5\15\1\0\11\15\1\0\7\15\34\0\1\u047c\31\0"+
    "\21\15\1\0\4\15\1\u047d\1\15\1\0\11\15\1\0"+
    "\7\15\27\0\2\u047e\35\0\21\15\1\u047e\1\u047f\5\15"+
    "\1\0\11\15\1\0\7\15\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[47136];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\7\0\1\1\1\11\1\1\1\11\4\1\2\11\27\1"+
    "\2\11\1\1\2\11\2\1\2\11\4\1\1\11\1\1"+
    "\3\0\10\1\6\0\15\1\1\0\1\1\1\0\4\1"+
    "\1\0\1\1\1\0\2\1\1\0\4\1\1\0\6\1"+
    "\1\0\10\1\1\0\3\1\1\0\1\1\1\0\2\1"+
    "\1\0\2\1\1\0\3\1\1\0\1\11\1\0\7\1"+
    "\11\0\20\1\1\0\1\1\1\0\6\1\1\0\1\1"+
    "\1\0\10\1\1\0\4\1\1\0\12\1\1\0\7\1"+
    "\1\0\1\1\1\11\2\1\1\0\2\1\1\0\1\1"+
    "\3\0\3\1\1\0\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\3\1\1\0\1\1\1\0\1\1\1\11\2\1"+
    "\5\0\1\11\4\0\16\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\4\1\1\0\3\1"+
    "\1\0\2\1\1\0\1\11\6\1\1\0\2\1\1\0"+
    "\2\1\1\0\1\1\2\0\7\1\1\11\3\1\1\0"+
    "\7\1\1\0\3\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\2\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\3\1\1\0\1\1\1\0\2\1\6\0"+
    "\2\11\1\0\11\1\1\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\3\1\1\0\6\1\2\0"+
    "\2\1\1\11\1\1\1\0\1\1\4\0\7\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\2\0\12\1\1\0"+
    "\4\1\1\11\3\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\1\11\4\1\1\0\1\1"+
    "\1\0\1\1\1\0\3\1\1\11\1\1\1\0\2\1"+
    "\4\0\1\11\2\0\7\1\1\0\3\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\3\0\3\1\1\0\4\1"+
    "\2\0\2\1\1\11\1\0\2\1\1\0\1\1\4\0"+
    "\7\1\1\0\1\1\1\11\2\1\1\0\1\1\2\0"+
    "\2\1\1\0\10\1\1\0\2\1\1\11\4\1\1\0"+
    "\2\1\2\0\2\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\0\1\11\3\1\1\0\1\1\1\11\1\1\1\0"+
    "\2\1\1\0\2\1\1\11\6\0\7\1\1\11\2\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\2\11"+
    "\3\1\1\0\4\1\1\0\1\11\2\1\1\11\1\1"+
    "\1\0\1\1\4\0\7\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\2\0\2\1\1\0\3\1\1\0\3\1"+
    "\1\0\4\1\1\0\3\1\1\0\1\1\1\0\1\1"+
    "\2\0\2\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\0\2\1\6\0\7\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\11\3\1"+
    "\1\0\1\1\1\11\1\1\2\0\1\11\1\0\5\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\11\1\1"+
    "\1\0\1\11\2\1\1\0\2\1\1\0\2\1\1\0"+
    "\1\1\1\0\2\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\1\11\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\2\1\1\0\1\1\2\0\1\11\3\0\7\1"+
    "\1\11\1\1\1\0\1\1\1\11\3\1\1\0\1\1"+
    "\1\0\1\11\1\0\4\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\11\1\1\1\0\2\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\3\0\1\11"+
    "\1\0\6\1\1\0\2\1\1\0\1\1\1\11\1\0"+
    "\3\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\11\2\1\1\11"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\0"+
    "\1\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\1\11\4\1\1\0\2\1"+
    "\1\11\1\1\1\11\2\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\2\0\1\11\7\1\1\0\1\1\1\11\1\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\11\1\1\1\11\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\0\2\1"+
    "\1\0\3\1\1\11\1\1\1\11\2\1\1\11\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\2\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\11\1\1"+
    "\1\11\1\1\1\0\1\1\1\0\1\1\1\11\1\1"+
    "\1\0\2\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\4\1\1\0\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\0\1\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
  StringBuffer string = new StringBuffer();


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public DsnFileScanner(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 248) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Object next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { yybegin(YYINITIAL); return yytext();
            }
          case 122: break;
          case 2: 
            { throw new Error("Illegal character <"+yytext()+">");
            }
          case 123: break;
          case 3: 
            { /* ignore */
            }
          case 124: break;
          case 4: 
            { return yytext();
            }
          case 125: break;
          case 5: 
            { return new Integer(yytext());
            }
          case 126: break;
          case 6: 
            { string.setLength(0); yybegin(STRING1);
            }
          case 127: break;
          case 7: 
            { string.setLength(0); yybegin(STRING2);
            }
          case 128: break;
          case 8: 
            { return DsnKeyword.OPEN_BRACKET;
            }
          case 129: break;
          case 9: 
            { return DsnKeyword.CLOSED_BRACKET;
            }
          case 130: break;
          case 10: 
            { string.append( yytext() );
            }
          case 131: break;
          case 11: 
            { yybegin(YYINITIAL); return string.toString();
            }
          case 132: break;
          case 12: 
            { string.append('\\');
            }
          case 133: break;
          case 13: 
            { yybegin(YYINITIAL); return DsnKeyword.OPEN_BRACKET;
            }
          case 134: break;
          case 14: 
            { yybegin(YYINITIAL); return DsnKeyword.CLOSED_BRACKET;
            }
          case 135: break;
          case 15: 
            { return new Double(yytext());
            }
          case 136: break;
          case 16: 
            { return DsnKeyword.ON;
            }
          case 137: break;
          case 17: 
            { return DsnKeyword.OFF;
            }
          case 138: break;
          case 18: 
            { yybegin(NAME); return DsnKeyword.VIA;
            }
          case 139: break;
          case 19: 
            { yybegin(NAME); return DsnKeyword.NET;
            }
          case 140: break;
          case 20: 
            { return DsnKeyword.PCB_SCOPE;
            }
          case 141: break;
          case 21: 
            { return DsnKeyword.PIN;
            }
          case 142: break;
          case 22: 
            { return DsnKeyword.FIX;
            }
          case 143: break;
          case 23: 
            { yybegin(YYINITIAL); return DsnKeyword.PCB_SCOPE;
            }
          case 144: break;
          case 24: 
            { return DsnKeyword.BACK;
            }
          case 145: break;
          case 25: 
            { return DsnKeyword.SIDE;
            }
          case 146: break;
          case 26: 
            { return DsnKeyword.TYPE;
            }
          case 147: break;
          case 27: 
            { yybegin(NAME); return DsnKeyword.COMPONENT_SCOPE;
            }
          case 148: break;
          case 28: 
            { yybegin(LAYER_NAME); return DsnKeyword.CIRCLE;
            }
          case 149: break;
          case 29: 
            { return DsnKeyword.VIAS;
            }
          case 150: break;
          case 30: 
            { return DsnKeyword.NONE;
            }
          case 151: break;
          case 31: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYGON_PATH;
            }
          case 152: break;
          case 32: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYGON;
            }
          case 153: break;
          case 33: 
            { return DsnKeyword.PINS;
            }
          case 154: break;
          case 34: 
            { yybegin(LAYER_NAME); return DsnKeyword.RECTANGLE;
            }
          case 155: break;
          case 35: 
            { return DsnKeyword.RULE;
            }
          case 156: break;
          case 36: 
            { yybegin(NAME); return DsnKeyword.WIRE;
            }
          case 157: break;
          case 37: 
            { return DsnKeyword.SPARE;
            }
          case 158: break;
          case 38: 
            { return DsnKeyword.SHAPE;
            }
          case 159: break;
          case 39: 
            { return DsnKeyword.ORDER;
            }
          case 160: break;
          case 40: 
            { yybegin(NAME); return DsnKeyword.LAYER;
            }
          case 161: break;
          case 41: 
            { return DsnKeyword.CLEARANCE;
            }
          case 162: break;
          case 42: 
            { yybegin(NAME); return DsnKeyword.CLASS;
            }
          case 163: break;
          case 43: 
            { yybegin(NAME); return DsnKeyword.IMAGE;
            }
          case 164: break;
          case 44: 
            { return DsnKeyword.POWER;
            }
          case 165: break;
          case 45: 
            { yybegin(NAME); return DsnKeyword.PLACE;
            }
          case 166: break;
          case 46: 
            { yybegin(NAME); return DsnKeyword.PLANE_SCOPE;
            }
          case 167: break;
          case 47: 
            { return DsnKeyword.RULES;
            }
          case 168: break;
          case 48: 
            { return DsnKeyword.FRONT;
            }
          case 169: break;
          case 49: 
            { return DsnKeyword.WIDTH;
            }
          case 170: break;
          case 50: 
            { return DsnKeyword.ATTACH;
            }
          case 171: break;
          case 51: 
            { return DsnKeyword.ACTIVE;
            }
          case 172: break;
          case 52: 
            { return DsnKeyword.SIGNAL;
            }
          case 173: break;
          case 53: 
            { return DsnKeyword.LENGTH;
            }
          case 174: break;
          case 54: 
            { return DsnKeyword.NORMAL;
            }
          case 175: break;
          case 55: 
            { return DsnKeyword.PARSER_SCOPE;
            }
          case 176: break;
          case 56: 
            { return DsnKeyword.ROUTES;
            }
          case 177: break;
          case 57: 
            { return DsnKeyword.ROTATE;
            }
          case 178: break;
          case 58: 
            { return DsnKeyword.FANOUT;
            }
          case 179: break;
          case 59: 
            { return DsnKeyword.FROMTO;
            }
          case 180: break;
          case 60: 
            { return DsnKeyword.WINDOW;
            }
          case 181: break;
          case 61: 
            { return DsnKeyword.WIRING_SCOPE;
            }
          case 182: break;
          case 62: 
            { yybegin(YYINITIAL); return DsnKeyword.SIGNAL;
            }
          case 183: break;
          case 63: 
            { return DsnKeyword.SESSION;
            }
          case 184: break;
          case 64: 
            { return DsnKeyword.OUTLINE;
            }
          case 185: break;
          case 65: 
            { return DsnKeyword.LIBRARY_SCOPE;
            }
          case 186: break;
          case 66: 
            { yybegin(NAME); return DsnKeyword.USE_VIA;
            }
          case 187: break;
          case 67: 
            { yybegin(NAME); return DsnKeyword.USE_NET;
            }
          case 188: break;
          case 68: 
            { return DsnKeyword.CONTROL;
            }
          case 189: break;
          case 69: 
            { return DsnKeyword.CLASSES;
            }
          case 190: break;
          case 70: 
            { return DsnKeyword.CIRCUIT;
            }
          case 191: break;
          case 71: 
            { return DsnKeyword.NETWORK_SCOPE;
            }
          case 192: break;
          case 72: 
            { return DsnKeyword.PROTECT;
            }
          case 193: break;
          case 73: 
            { yybegin(NAME); return DsnKeyword.KEEPOUT;
            }
          case 194: break;
          case 74: 
            { return DsnKeyword.ABSOLUTE;
            }
          case 195: break;
          case 75: 
            { return DsnKeyword.BOUNDARY;
            }
          case 196: break;
          case 76: 
            { return DsnKeyword.CONSTANT;
            }
          case 197: break;
          case 77: 
            { return DsnKeyword.VERTICAL;
            }
          case 198: break;
          case 78: 
            { return DsnKeyword.VIA_RULE;
            }
          case 199: break;
          case 79: 
            { yybegin(NAME); return DsnKeyword.PADSTACK;
            }
          case 200: break;
          case 80: 
            { return DsnKeyword.POSITION;
            }
          case 201: break;
          case 81: 
            { yybegin(NAME); return DsnKeyword.HOST_CAD;
            }
          case 202: break;
          case 82: 
            { return DsnKeyword.AUTOROUTE;
            }
          case 203: break;
          case 83: 
            { return DsnKeyword.STRUCTURE_SCOPE;
            }
          case 204: break;
          case 84: 
            { return DsnKeyword.LOCK_TYPE;
            }
          case 205: break;
          case 85: 
            { yybegin(NAME); return DsnKeyword.USE_LAYER;
            }
          case 206: break;
          case 86: 
            { return DsnKeyword.VIA_COSTS;
            }
          case 207: break;
          case 87: 
            { return DsnKeyword.POSTROUTE;
            }
          case 208: break;
          case 88: 
            { return DsnKeyword.PLACEMENT_SCOPE;
            }
          case 209: break;
          case 89: 
            { return DsnKeyword.SNAP_ANGLE;
            }
          case 210: break;
          case 90: 
            { yybegin(NAME); return DsnKeyword.LAYER_RULE;
            }
          case 211: break;
          case 91: 
            { return DsnKeyword.VIA_AT_SMD;
            }
          case 212: break;
          case 92: 
            { return DsnKeyword.PULL_TIGHT;
            }
          case 213: break;
          case 93: 
            { return DsnKeyword.RESOLUTION_SCOPE;
            }
          case 214: break;
          case 94: 
            { return DsnKeyword.FLIP_STYLE;
            }
          case 215: break;
          case 95: 
            { return DsnKeyword.HORIZONTAL;
            }
          case 216: break;
          case 96: 
            { return DsnKeyword.SHOVE_FIXED;
            }
          case 217: break;
          case 97: 
            { return DsnKeyword.CLASS_CLASS;
            }
          case 218: break;
          case 98: 
            { yybegin(NAME); return DsnKeyword.VIA_KEEPOUT;
            }
          case 219: break;
          case 99: 
            { return DsnKeyword.NETWORK_OUT;
            }
          case 220: break;
          case 100: 
            { yybegin(IGNORE_QUOTE); return DsnKeyword.STRING_QUOTE;
            }
          case 221: break;
          case 101: 
            { yybegin(NAME); return DsnKeyword.LOGICAL_PART;
            }
          case 222: break;
          case 102: 
            { return DsnKeyword.PART_LIBRARY_SCOPE;
            }
          case 223: break;
          case 103: 
            { return DsnKeyword.ROTATE_FIRST;
            }
          case 224: break;
          case 104: 
            { yybegin(NAME); return DsnKeyword.HOST_VERSION;
            }
          case 225: break;
          case 105: 
            { return DsnKeyword.KEEPOUT;
            }
          case 226: break;
          case 106: 
            { return DsnKeyword.START_PASS_NO;
            }
          case 227: break;
          case 107: 
            { return DsnKeyword.NINETY_DEGREE;
            }
          case 228: break;
          case 108: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYLINE_PATH;
            }
          case 229: break;
          case 109: 
            { return DsnKeyword.PLACE_CONTROL;
            }
          case 230: break;
          case 110: 
            { yybegin(NAME); return DsnKeyword.PLACE_KEEPOUT;
            }
          case 231: break;
          case 111: 
            { yybegin(NAME); return DsnKeyword.CLEARANCE_CLASS;
            }
          case 232: break;
          case 112: 
            { return DsnKeyword.PLANE_VIA_COSTS;
            }
          case 233: break;
          case 113: 
            { return DsnKeyword.FORTYFIVE_DEGREE;
            }
          case 234: break;
          case 114: 
            { return DsnKeyword.WRITE_RESOLUTION;
            }
          case 235: break;
          case 115: 
            { return DsnKeyword.START_RIPUP_COSTS;
            }
          case 236: break;
          case 116: 
            { return DsnKeyword.AUTOROUTE_SETTINGS;
            }
          case 237: break;
          case 117: 
            { return DsnKeyword.PREFERRED_DIRECTION;
            }
          case 238: break;
          case 118: 
            { yybegin(NAME); return DsnKeyword.LOGICAL_PART_MAPPING;
            }
          case 239: break;
          case 119: 
            { return DsnKeyword.GENERATED_BY_FREEROUTE;
            }
          case 240: break;
          case 120: 
            { return DsnKeyword.PREFERRED_DIRECTION_TRACE_COSTS;
            }
          case 241: break;
          case 121: 
            { return DsnKeyword.AGAINST_PREFERRED_DIRECTION_TRACE_COSTS;
            }
          case 242: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
